package com.gmail.ndonskih63;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;

public class Copy implements Runnable {

	private File from;
	private File to;
	private long size;
	private long newProgress;
	private long progress;
	private boolean status;
	private boolean changedStatus;

	public Copy(File from, File recive) {
		super();
		this.from = from;
		this.to = recive;
	}

	public boolean isStatus() {
		return status;
	}

	public synchronized long getProgress() {
		while (!changedStatus) {
			try {
				wait();
			} catch (InterruptedException e) {
				e.printStackTrace();
			}
		}
		changedStatus = false;
		return progress;
	}
	private synchronized void setProgress(long progress) {
		if (this.progress != progress) {
			this.progress = progress;
			changedStatus = true;
			notify();
		}
	}

	private void CopyFile(File from, File to) {

		if (!from.exists() || !to.isDirectory())
			try {
				throw new IOException("ERROR!");
			} catch (IOException e) {
				e.printStackTrace();
			}

		size = from.length();
		try (FileInputStream fis = new FileInputStream(from);
				FileOutputStream fos = new FileOutputStream(to.getAbsolutePath() + File.separator + from.getName())) {
			byte[] buffer = new byte[2048];
			int byteread;
			while ((byteread = fis.read(buffer)) > 0) {
				fos.write(buffer, 0, byteread);
				newProgress += byteread;
				setProgress(newProgress * 100 / size);

			}

		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		CopyFile(from, to);
		status = true;
	}
}
